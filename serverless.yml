org: marccasimiro
app: project-service
service: project-service
frameworkVersion: '3'

provider:
    name: aws
    runtime: nodejs18.x
    timeout: 30
    environment:
        DB_HOST: ${self:custom.secrets.DB_HOST}
        DB_NAME: ${self:custom.secrets.DB_NAME}
        DB_USER: ${self:custom.secrets.DB_USER}
        DB_PASSWORD: ${self:custom.secrets.DB_PASSWORD}

plugins:
    - serverless-prune-versions
    - serverless-esbuild
    - serverless-offline

custom:
    prune:
        automatic: true
        number: 3
    secrets: ${file(secrets.json)}

functions:
    populate:
        handler: src/handlers/populateDb.handler
        events:
            - http:
                  path: /populate
                  method: post

    createBook:
        handler: src/handlers/books/create.handler
        events:
            - http:
                  path: /book/create
                  method: post

    deleteBook:
        handler: src/handlers/books/delete.handler
        events:
            - http:
                  path: /book/delete
                  method: delete

    updateBook:
        handler: src/handlers/books/update.handler
        events:
            - http:
                  path: /book/update
                  method: put

    getBooks:
        handler: src/handlers/books/get.handler
        events:
            - http:
                  path: /book/get
                  method: get

    createUser:
        handler: src/handlers/users/create.handler
        events:
            - http:
                  path: /user/create
                  method: post

    deleteUser:
        handler: src/handlers/users/delete.handler
        events:
            - http:
                  path: /user/delete
                  method: delete

    updateUser:
        handler: src/handlers/users/update.handler
        events:
            - http:
                  path: /user/update
                  method: put

    getUser:
        handler: src/handlers/users/get.handler
        events:
            - http:
                  path: /user/get
                  method: get

    createBorrowedBook:
        handler: src/handlers/borrowedBooks/create.handler
        events:
            - http:
                  path: /borrowedBook/create
                  method: post

    deleteBorrowedBook:
        handler: src/handlers/borrowedBooks/delete.handler
        events:
            - http:
                  path: /borrowedBook/delete
                  method: delete

    # getBooksPerAuthor:
    #     handler: src/handlers/getBooksPerAuthor.handler
    #     events:
    #         - http:
    #               path: /getBooksPerAuthor
    #               method: get
